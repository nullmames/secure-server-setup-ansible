---
- name: Find RHINO snapshot
  when: snapshot_url is not defined
  block:
    - name: See if RHINO snapshot exists
      ansible.builtin.uri:
        url: "https://snapshots.rhinostake.com/{{ network }}/{{ network }}-snapshot.latest.tar.zst"
        method: GET
        status_code: 200
        return_content: false
      ignore_errors: true
      register: rhino_snapshot_exists

    - name: Set RHINO snapshot_url
      when: rhino_snapshot_exists.status == 200
      ansible.builtin.set_fact:
        snapshot_url: "https://snapshots.rhinostake.com/{{ network }}/{{ network }}-snapshot.latest.tar.zst"

- name: Find public snapshot
  when: snapshot_url is not defined
  block:
    - name: Grab Imperator snapshot list
      ansible.builtin.uri:
        url: "https://api.imperator.co/services?network={% if 'Testnet' in group_names %}testnets{% else %}mainnets{% endif %}"
        method: GET
        status_code: 200
        body_format: json
        return_content: true
      ignore_errors: true
      register: public_snapshot_data

    - name: Set snapshot url for last chain snapshot
      when: public_snapshot_data.status == 200
      ansible.builtin.set_fact:
        public_snapshot_url: "{{
          public_snapshot_data.content |
          from_json |
          json_query(query)
          }}"
      vars:
        query: '{{ network | capitalize }}.snapshots[0]."eu-west-1"[0].dl_url'
      ignore_errors: true
      register: public_snapshot_exists

    - name: Set snapshot_url
      when: (public_snapshot_data.status == 200) and (public_snapshot_exists.failed == false)
      ansible.builtin.set_fact:
        snapshot_url: "{{ public_snapshot_url }}"

- name: Fail if snapshot_url not defined by any source
  ansible.builtin.fail:
    msg: snapshot_url is not set or available
  when: (snapshot_url is undefined) or (snapshot_url == None)

- name: Print snapshot_url
  ansible.builtin.debug:
    msg: "Downloading snapshot {{ snapshot_url }}"

- name: Set snapshot_name fact
  ansible.builtin.set_fact:
    snapshot_name: "{{ snapshot_url | basename }}"

- name: Download snapshot
  ansible.builtin.command:
    cmd: "/usr/bin/aria2c {{ aria2c_options }} -d {{ user_dir }} -o {{ snapshot_name }} {{ snapshot_url }}"

- name: Stop cosmovisor
  become: true
  ansible.builtin.systemd:
    name: "{{ daemon }}"
    state: stopped

- name: Pause for 5 seconds
  ansible.builtin.pause:
    seconds: 5

- name: Save the state file
  ansible.builtin.copy:
    src: "{{ user_dir }}/{{ folder }}/data/priv_validator_state.json"
    dest: "{{ user_dir }}/{{ chain_id }}_priv_validator_state.json"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0600"
    remote_src: true
    force: true

- name: Remove and create data folder
  ansible.builtin.file:
    path: "{{ user_dir }}/{{ folder }}/data"
    state: "{{ item }}"
    mode: "0755"
  with_items:
    - absent
    - directory

- name: Extract snapshot archive
  ansible.builtin.unarchive:
    src: "{{ user_dir }}/{{ snapshot_name }}"
    dest: "{{ user_dir }}/{{ folder }}"
    remote_src: true

- name: Force delete the priv_validator_state file if exists in archive
  ansible.builtin.file:
    path: "{{ user_dir }}/{{ folder }}/data/priv_validator_state.json"
    state: absent

- name: Replace the state file with saved version
  ansible.builtin.copy:
    src: "{{ user_dir }}/{{ chain_id }}_priv_validator_state.json"
    dest: "{{ user_dir }}/{{ folder }}/data/priv_validator_state.json"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0600"
    remote_src: true
    force: true

- name: Ensure state-sync is disabled
  community.general.ini_file:
    path: "{{ user_dir }}/{{ folder }}/config/config.toml"
    section: statesync
    option: "enable"
    value: "false"
    create: false

- name: Start cosmovisor
  become: true
  ansible.builtin.systemd:
    name: "{{ daemon }}"
    state: restarted

- name: Cleanup temporary files
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ user_dir }}/{{ snapshot_name }}"
    - "{{ user_dir }}/{{ chain_id }}_priv_validator_state.json"
