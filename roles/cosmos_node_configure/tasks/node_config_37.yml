---
# Configure for Tendermint 0.37+
- name: Read vars
  ansible.builtin.include_vars:
    file: vars/main.yml
    name: config_changes

- name: Register public ip
  ansible.builtin.uri:
    url: https://ipv4.icanhazip.com/
    return_content: true
  register: public_ip

- name: Set external address in config.toml
  ansible.builtin.lineinfile:
    path: "{{ user_dir }}/{{ folder }}/config/config.toml"
    regexp: 'external-address = "'
    line: 'external-address = "{{ public_ip.content | trim }}:{{ custom_port_prefix }}56"'
    state: present

- name: Adjust config.toml for generic items (config_toml_37)
  block:
    - name: Adjust null section on 37
      community.general.ini_file:
        path: "{{ user_dir }}/{{ folder }}/config/config.toml"
        option: "{{ item.key }}"
        value: "{{ item.value }}"
        mode: "0644"
        state: present
        section:
      loop: '{{ config_changes.cosmos_node_configure_config_toml_37["nosection"] | dict2items }}'

    - name: Adjust rpc section
      community.general.ini_file:
        path: "{{ user_dir }}/{{ folder }}/config/config.toml"
        section: rpc
        option: "{{ item.key }}"
        value: "{{ item.value }}"
        mode: "0644"
      loop: '{{ config_changes.cosmos_node_configure_config_toml_37["rpc"] | dict2items }}'

    - name: Adjust p2p section
      community.general.ini_file:
        path: "{{ user_dir }}/{{ folder }}/config/config.toml"
        section: p2p
        option: "{{ item.key }}"
        value: "{{ item.value }}"
        mode: "0644"
      loop: '{{ config_changes.cosmos_node_configure_config_toml_37["p2p"] | dict2items }}'

    - name: Adjust mempool section
      community.general.ini_file:
        path: "{{ user_dir }}/{{ folder }}/config/config.toml"
        section: mempool
        option: "{{ item.key }}"
        value: "{{ item.value }}"
        mode: "0644"
      loop: '{{ config_changes.cosmos_node_configure_config_toml_37["mempool"] | dict2items }}'

    - name: Adjust self-remediation section
      community.general.ini_file:
        path: "{{ user_dir }}/{{ folder }}/config/config.toml"
        section: self-remediation
        option: "{{ item.key }}"
        value: "{{ item.value }}"
        mode: "0644"
      loop: '{{ config_changes.cosmos_node_configure_config_toml_37["self-remediation"] | dict2items }}'

    - name: Adjust instrumentation section
      community.general.ini_file:
        path: "{{ user_dir }}/{{ folder }}/config/config.toml"
        section: instrumentation
        option: "{{ item.key }}"
        value: "{{ item.value }}"
        mode: "0644"
      loop: '{{ config_changes.cosmos_node_configure_config_toml_37["instrumentation"] | dict2items }}'

- name: Adjust app.toml for generic items
  block:
    - name: Adjust api section
      community.general.ini_file:
        path: "{{ user_dir }}/{{ folder }}/config/app.toml"
        section: api
        option: "{{ item.key }}"
        value: "{{ item.value }}"
        mode: "0644"
      loop: '{{ config_changes.cosmos_node_configure_app_toml["api"] | dict2items }}'

    - name: Adjust grpc section
      community.general.ini_file:
        path: "{{ user_dir }}/{{ folder }}/config/app.toml"
        section: grpc
        option: "{{ item.key }}"
        value: "{{ item.value }}"
        mode: "0644"
      loop: '{{ config_changes.cosmos_node_configure_app_toml["grpc"] | dict2items }}'

    - name: Adjust grpc-web section
      community.general.ini_file:
        path: "{{ user_dir }}/{{ folder }}/config/app.toml"
        section: grpc-web
        option: "{{ item.key }}"
        value: "{{ item.value }}"
        mode: "0644"
      loop: '{{ config_changes.cosmos_node_configure_app_toml["grpc-web"] | dict2items }}'

    - name: Adjust state-commit section for Sei
      community.general.ini_file:
        path: "{{ user_dir }}/{{ folder }}/config/app.toml"
        section: state-commit
        option: "{{ item.key }}"
        value: "{{ item.value }}"
        mode: "0644"
      loop: '{{ config_changes.cosmos_node_configure_app_toml["state-commit"] | dict2items }}'

- name: Verify if wasm exists
  ansible.builtin.lineinfile:
    dest: "{{ user_dir }}/{{ folder }}/config/app.toml"
    line: "[wasm]"
  check_mode: true
  register: wasmrequired

- name: Adjust wasm section
  when: wasmrequired.changed is false
  community.general.ini_file:
    path: "{{ user_dir }}/{{ folder }}/config/app.toml"
    section: "wasm"
    option: "{{ item.key }}"
    value: "{{ item.value }}"
    create: false
  loop: '{{ config_changes.cosmos_node_configure_app_toml["wasm"] | dict2items }}'

- name: Verify if evm exists
  ansible.builtin.lineinfile:
    dest: "{{ user_dir }}/{{ folder }}/config/app.toml"
    line: "[evm]"
  check_mode: true
  register: evmrequired

- name: Adjust evm section
  when: evmrequired.changed is false
  community.general.ini_file:
    path: "{{ user_dir }}/{{ folder }}/config/app.toml"
    section: "evm"
    option: "{{ item.key }}"
    value: "{{ item.value }}"
    create: false
  loop: '{{ config_changes.cosmos_node_configure_app_toml["evm"] | dict2items }}'

- name: Adjust pruning and state-sync settings for default pruning
  when: (rpc is undefined) and (archive is undefined)
  block:
    - name: Update pruning (default)
      community.general.ini_file:
        path: "{{ user_dir }}/{{ folder }}/config/app.toml"
        section: null
        option: "{{ item.key }}"
        value: "{{ item.value }}"
        create: false
      loop: '{{ config_changes.cosmos_node_configure_pruning_default["no_section"] | dict2items }}'

    - name: Update state-sync (default)
      community.general.ini_file:
        path: "{{ user_dir }}/{{ folder }}/config/app.toml"
        section: state-sync
        option: "{{ item.key }}"
        value: "{{ item.value }}"
        create: false
      loop: '{{ config_changes.cosmos_node_configure_pruning_default["state-sync"] | dict2items }}'

    - name: Disable state-store
      community.general.ini_file:
        path: "{{ user_dir }}/{{ folder }}/config/app.toml"
        section: state-store
        option: "{{ item.key }}"
        value: "{{ item.value }}"
        create: false
      loop: '{{ config_changes.cosmos_node_configure_state_store_disabled["state-store"] | dict2items }}'

- name: Adjust pruning and state-sync settings for rpc pruning
  when: (rpc is defined) and (archive is undefined)
  block:
    - name: Update pruning (rpc)
      community.general.ini_file:
        path: "{{ user_dir }}/{{ folder }}/config/app.toml"
        section: null
        option: "{{ item.key }}"
        value: "{{ item.value }}"
        create: false
      loop: '{{ config_changes.cosmos_node_configure_pruning_custom_rpc["no_section"] | dict2items }}'

    - name: Update state-sync (rpc)
      community.general.ini_file:
        path: "{{ user_dir }}/{{ folder }}/config/app.toml"
        section: state-sync
        option: "{{ item.key }}"
        value: "{{ item.value }}"
        create: false
      loop: '{{ config_changes.cosmos_node_configure_pruning_custom_rpc["state-sync"] | dict2items }}'

    - name: Enable state-store
      community.general.ini_file:
        path: "{{ user_dir }}/{{ folder }}/config/app.toml"
        section: state-store
        option: "{{ item.key }}"
        value: "{{ item.value }}"
        create: false
      loop: '{{ config_changes.cosmos_node_configure_state_store_enabled["state-store"] | dict2items }}'

- name: Adjust pruning and state-sync settings for archive
  when: archive is defined
  block:
    - name: Update pruning (archive)
      community.general.ini_file:
        path: "{{ user_dir }}/{{ folder }}/config/app.toml"
        section: null
        option: "{{ item.key }}"
        value: "{{ item.value }}"
        create: false
      loop: '{{ config_changes.cosmos_node_configure_pruning_nothing["no_section"] | dict2items }}'

    - name: Update state-sync (archive)
      community.general.ini_file:
        path: "{{ user_dir }}/{{ folder }}/config/app.toml"
        section: state-sync
        option: "{{ item.key }}"
        value: "{{ item.value }}"
        create: false
      loop: '{{ config_changes.cosmos_node_configure_pruning_nothing["state-sync"] | dict2items }}'

    - name: Enable state-store
      community.general.ini_file:
        path: "{{ user_dir }}/{{ folder }}/config/app.toml"
        section: state-store
        option: "{{ item.key }}"
        value: "{{ item.value }}"
        create: false
      loop: '{{ config_changes.cosmos_node_configure_state_store_enabled["state-store"] | dict2items }}'

- name: Set indexer to null for validator nodes
  when: (rpc is undefined) and (archive is undefined)
  ansible.builtin.lineinfile:
    path: "{{ user_dir }}/{{ folder }}/config/config.toml"
    regexp: "^indexer ="
    line: 'indexer = ["null"]'
    state: present
    backrefs: true

- name: Disable ABCI Responses on validator nodes
  when: (rpc is undefined) and (archive is undefined)
  ansible.builtin.lineinfile:
    path: "{{ user_dir }}/{{ folder }}/config/config.toml"
    regexp: "^discard-abci-responses ="
    line: "discard-abci-responses = true"
    state: present
    backrefs: true

- name: Set indexer to kv for RPC and archive nodes
  when: (rpc is defined) or (archive is defined)
  ansible.builtin.lineinfile:
    path: "{{ user_dir }}/{{ folder }}/config/config.toml"
    regexp: "^indexer ="
    line: 'indexer = ["kv"]'
    state: present
    backrefs: true

- name: Set IAVL and related items (if present)
  ansible.builtin.lineinfile:
    path: "{{ user_dir }}/{{ folder }}/config/app.toml"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
    backrefs: true
  with_items:
    - { regexp: "^iavl-cache-size", line: "iavl-cache-size = 3906250" }
    - { regexp: "^memory_cache_size", line: "memory_cache_size = 8000" }

- name: Update minimum gas price on config file
  ansible.builtin.lineinfile:
    path: "{{ user_dir }}/{{ folder }}/config/app.toml"
    regexp: "^minimum-gas-prices ="
    line: 'minimum-gas-prices = "{{ minimum_gas_price }}"'
    state: present
  when: minimum_gas_price is defined

- name: Set signing port address and node mode for horcrux
  when: ( nebula_internal_ip_addr is defined ) and ( sentries is defined ) and ( nebula_internal_ip_addr in sentries )
  block:
    - name: Adjust priv_validator section
      community.general.ini_file:
        path: "{{ user_dir }}/{{ folder }}/config/config.toml"
        section: priv-validator
        option: "{{ item.key }}"
        value: "{{ item.value }}"
        mode: "0644"
      loop: '{{ config_changes.cosmos_node_configure_config_toml_37["priv_validator"] | dict2items }}'

    - name: Set node mode to validator
      ansible.builtin.lineinfile:
        path: "{{ user_dir }}/{{ folder }}/config/config.toml"
        regexp: "^mode ="
        line: 'mode = "validator"'
        state: present
