---
- name: Create docker-compose directory
  ansible.builtin.file:
    path: "{{ user_dir }}/docker-compose"
    state: directory
    mode: "0755"

- name: Copy .env file
  ansible.builtin.template:
    src: "templates/adapters/.env"
    dest: "{{ user_dir }}/docker-compose/.env"
    mode: "0644"
  notify: Grafana bridge update

- name: Copy docker-compose file
  ansible.builtin.template:
    src: "templates/adapters/docker-compose.yml.j2"
    dest: "{{ user_dir }}/docker-compose/docker-compose.yml"
    mode: "0644"
  notify: Grafana bridge update

- name: Get instance AWS profile info
  amazon.aws.aws_caller_info:
  register: aws_info

- name: Set account info fact
  ansible.builtin.set_fact:
    ecr_registry_url: "{{ aws_info.account }}.dkr.ecr.us-east-1.amazonaws.com"

- name: Get ECR token
  ansible.builtin.shell: "aws ecr get-login-password --region us-east-1"
  register: ecr_token
  environment:
    PATH: "{{ path }}"

- name: Log into ECR registry
  community.docker.docker_login:
    registry_url: "{{ ecr_registry_url }}"
    debug: true
    username: "AWS"
    password: "{{ ecr_token.stdout }}"
    reauthorize: true

- name: Pull containers
  ansible.builtin.command:
    cmd: "docker compose pull"
  args:
    chdir: "{{ user_dir }}/docker-compose"
  environment:
    PATH: "{{ path }}"

- name: Update and launch containers
  ansible.builtin.command:
    cmd: "docker compose up -d"
  args:
    chdir: "{{ user_dir }}/docker-compose"
  environment:
    PATH: "{{ path }}"

- name: List running containers
  ansible.builtin.command:
    cmd: "docker ps"
  args:
    chdir: "{{ user_dir }}/docker-compose"
    executable: /bin/bash
  register: running_containers

- name: Print list of running containers
  ansible.builtin.debug:
    msg: "{{ running_containers.stdout_lines }}"
