---
# Metis node  This does not handle snapshots.
# Docs:
# Custom port prefix: 148

- name: Create a network
  community.docker.docker_network:
    name: "{{ network }}_net"

- name: Build folder structure
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
  loop:
    - "{{ folder }}"

- name: Metis l1dtl node
  community.docker.docker_container:
    name: "{{ network }}_{{ consensus_container_name }}"
    restart_policy: unless-stopped
    state: started
    image: "metisdao/dtl:{{ consensus_container_version }}"
    stop_timeout: 500
    pull: true
    volumes:
      - "{{ folder }}/{{ consensus_container_name }}:/data"
    networks:
      - name: "{{ network }}_net"
    env:
      URL: "https://metisprotocol.github.io/metis-networks/andromeda-mainnet/addresses.json"
      DATA_TRANSPORT_LAYER__L1_RPC_ENDPOINT: "{{ ethereum_l1 }}"
      DATA_TRANSPORT_LAYER__L2_RPC_ENDPOINT: "https://andromeda.metis.io"
      DATA_TRANSPORT_LAYER__SYNC_FROM_L1: "true"
      DATA_TRANSPORT_LAYER__SYNC_FROM_L2: "false"
      DATA_TRANSPORT_LAYER__L2_CHAIN_ID: "1088"
      DATA_TRANSPORT_LAYER__DB_PATH: "/data/db"
      DATA_TRANSPORT_LAYER__SERVER_PORT: "7878"
      DATA_TRANSPORT_LAYER__TRANSACTIONS_PER_POLLING_INTERVAL: "1000"
      DATA_TRANSPORT_LAYER__CONFIRMATIONS: "12"
      DATA_TRANSPORT_LAYER__POLLING_INTERVAL: "60000"
      DATA_TRANSPORT_LAYER__LOGS_PER_POLLING_INTERVAL: "1000"
      DATA_TRANSPORT_LAYER__DANGEROUSLY_CATCH_ALL_ERRORS: "true"
      DATA_TRANSPORT_LAYER__SERVER_HOSTNAME: "0.0.0.0"
      DATA_TRANSPORT_LAYER__L1_START_HEIGHT: "13625200"
      # Minio
      DATA_TRANSPORT_LAYER__MINIO_ENABLED: "true"
      DATA_TRANSPORT_LAYER__MINIO_BUCKET: "metis-1088-prod"
      DATA_TRANSPORT_LAYER__MINIO_ENDPOINT: "memoapi.metis.io"
      DATA_TRANSPORT_LAYER__MINIO_PORT: "6083"
      DATA_TRANSPORT_LAYER__MINIO_USE_SSL: "true"
      DATA_TRANSPORT_LAYER__MINIO_ACCESS_KEY: "metisread"
      DATA_TRANSPORT_LAYER__MINIO_SECRET_KEY: "8uyywb*7y3"
      # Batch
      DATA_TRANSPORT_LAYER__BATCH_INBOX_ADDRESS: "0xff00000000000000000000000000000000001088"
      DATA_TRANSPORT_LAYER__BATCH_INBOX_SENDER: "0x1a9da0aeda630ddf2748a453bf6d92560762d914"
      DATA_TRANSPORT_LAYER__DESEQBLOCK: "16500000"
      DATA_TRANSPORT_LAYER__BATCH_INBOX_START_INDEX: "42647"
      DATA_TRANSPORT_LAYER__BATCH_INBOX_L1_HEIGHT: "19438451"
      DATA_TRANSPORT_LAYER__SYNC_L1_BATCH: "true" # required true for finalized block
      # Node options
      NODE_OPTIONS: "--max-old-space-size=16384"

- name: Run l2geth node
  community.docker.docker_container:
    name: "{{ network }}_{{ execution_container_name }}"
    image: metisdao/l2geth:{{ execution_container_version }}
    restart_policy: unless-stopped
    state: started
    stop_timeout: 600
    pull: true
    networks:
      - name: "{{ network }}_net"
    ports:
      # p2p
      - "{{ custom_port_prefix }}03:{{ custom_port_prefix }}03/tcp"
      - "{{ custom_port_prefix }}03:{{ custom_port_prefix }}03/udp"
      # rpc
      - "{{ nebula_internal_ip_addr }}:{{ custom_port_prefix }}45:8545"
      - 127.0.0.1:{{ custom_port_prefix }}45:8545
      - "{{ nebula_internal_ip_addr }}:{{ custom_port_prefix }}46:8546"
      - 127.0.0.1:{{ custom_port_prefix }}46:8546
    volumes:
      - "{{ folder }}/{{ execution_container_name }}:/root/.ethereum"
    env:
      DATADIR: "/root/.ethereum"
      PORT: "{{ custom_port_prefix }}03"
      NO_USB: "true"
      VERBOSITY: "3"
      IPC_DISABLE: "false"
      MAX_PEER: "150"
      GCMODE: "archive"
      USING_OVM: "true"
      CHAIN_ID: "1088"
      NETWORK_ID: "1088"
      TARGET_GAS_LIMIT: "1100000000"
      ETH1_CTC_DEPLOYMENT_HEIGHT: "13626959"
      ETH1_SYNC_SERVICE_ENABLE: "false"
      ROLLUP_BACKEND: "l1"
      ROLLUP_CLIENT_HTTP: "http://{{ network }}_{{ consensus_container_name }}:7878"
      ROLLUP_TIMESTAMP_REFRESH: "10s"
      ROLLUP_POLL_INTERVAL_FLAG: "10s"
      ROLLUP_ENFORCE_FEES: "true"
      # for geth.sh
      ROLLUP_STATE_DUMP_PATH: "https://metisprotocol.github.io/metis-networks/andromeda-mainnet/state-dump.latest.json"
      BLOCK_SIGNER_KEY: "6587ae678cf4fc9a33000cdbf9f35226b71dcc6a4684a31203241f9bcfd55d27"
      BLOCK_SIGNER_ADDRESS: "0x00000398232E2064F896018496b4b44b3D62751F"
      # for rpc/websocket/ipc
      RPC_ENABLE: "true"
      RPC_ADDR: "0.0.0.0"
      RPC_PORT: "8545"
      RPC_API: "eth,net,web3,mvm,debug"
      RPC_CORS_DOMAIN: "*"
      RPC_VHOSTS: "*"
      WS: "true"
      WS_ADDR: "0.0.0.0"
      WS_PORT: "8546"
      WS_API: "eth,net,web3,mvm,debug"
      WS_ORIGINS: "*"
      # seqset
      SEQSET_VALID_HEIGHT: "15214531"
      DESEQBLOCK: "16500000"
      SEQSET_CONTRACT: "0x0fe382b74C3894B65c10E5C12ae60Bbd8FAf5b48"
      SEQ_BRIDGE_URL: "https://andromeda.metis.io"
      BOOTNODES: "{{ execution_bootnodes }}"
      # RMN
      RPC_BATCH_LIMIT: "0"
