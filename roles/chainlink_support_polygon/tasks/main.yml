---
# Polygon support structure with host networking.  This does not handle snapshots.
# Snapshots (pebble/path) available at https://publicnode.com/snapshots#polygon
# Ports:
#  - Bor: 11703/tcp - public, RPC 11745/tcp, 11746/tcp - internal
#  - Heimdall: p2p: 11756/tcp - public
#  - HeimdallRest: rest: 11717/tcp - internal

- name: Register public ip
  ansible.builtin.uri:
    url: https://ipv4.icanhazip.com/
    return_content: true
  register: public_ip

- name: Create a network
  community.docker.docker_network:
    name: "{{ network }}_net"

- name: Build folder structure
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
  loop:
    - "{{ folder }}"
    - "{{ folder }}/{{ execution_container_name }}"
    - "{{ folder }}/{{ consensus_container_name }}"

- name: Check if heimdall has been initialized
  become: true
  ansible.builtin.stat:
    path: "{{ folder }}/{{ consensus_container_name }}/config/genesis.json"
  register: node_initialized

- name: Init heimdall
  when: not node_initialized.stat.exists
  block:
    - name: Pull and init heimdall container
      community.docker.docker_container:
        name: "{{ consensus_container_name }}"
        image: 0xpolygon/heimdall:{{ consensus_container_version }}
        state: started
        network_mode: host
        stop_timeout: 600
        pull: true
        volumes:
          - "{{ folder }}/{{ consensus_container_name }}:/heimdall-home"
        command:
          - "init"
          - "--home=/heimdall-home"
          - "--chain={{ consensus_network }}"

    - name: Replace genesis file
      ansible.builtin.get_url:
        url: "{{ consensus_genesis }}"
        dest: "{{ folder }}/{{ consensus_container_name }}/config/genesis.json"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: "0644"

- name: Pull and run heimdall container
  community.docker.docker_container:
    name: "{{ consensus_container_name }}"
    image: 0xpolygon/heimdall:{{ consensus_container_version }}
    restart_policy: unless-stopped
    state: started
    networks:
      - name: "{{ network }}_net"
    stop_timeout: 600
    pull: true
    ports:
      - "{{ custom_port_prefix }}56:{{ custom_port_prefix }}56/tcp"
    volumes:
      - "{{ folder }}/{{ consensus_container_name }}:/heimdall-home"
    command:
      - "start"
      - "--home=/heimdall-home"
      - "--chain={{ consensus_network }}"
      - "--p2p.seeds={{ consensus_bootnodes }}"
      - "--p2p.laddr=tcp://0.0.0.0:{{ custom_port_prefix }}56"
      - "--moniker={{ inventory_hostname }}"
      - "--bor_rpc_url=http://{{ execution_container_name }}:8545"
      - "--eth_rpc_url={{ ethereum_l1 }}"

- name: Pull and run heimdallrest container
  community.docker.docker_container:
    name: "{{ consensus_container_name }}rest"
    image: 0xpolygon/heimdall:{{ consensus_container_version }}
    restart_policy: unless-stopped
    state: started
    networks:
      - name: "{{ network }}_net"
    stop_timeout: 600
    pull: true
    volumes:
      - "{{ folder }}/{{ consensus_container_name }}:/heimdall-home"
    command:
      - "rest-server"
      - "--home=/heimdall-home"
      - "--node=tcp://{{ consensus_container_name }}:26657"
      - "--chain={{ consensus_network }}"

- name: Pull and run bor container
  community.docker.docker_container:
    name: "{{ execution_container_name }}"
    image: 0xpolygon/bor:{{ execution_container_version }}
    restart_policy: unless-stopped
    state: started
    networks:
      - name: "{{ network }}_net"
    ports:
      # p2p
      - "{{ custom_port_prefix }}03:{{ custom_port_prefix }}03/tcp"
      - "{{ custom_port_prefix }}03:{{ custom_port_prefix }}03/udp"
      # rpc
      - "127.0.0.1:{{ custom_port_prefix }}45:8545/tcp"
      - "{{ nebula_internal_ip_addr }}:{{ custom_port_prefix }}45:8545/tcp"
      - "127.0.0.1:{{ custom_port_prefix }}46:8546/tcp"
      - "{{ nebula_internal_ip_addr }}:{{ custom_port_prefix }}46:8546/tcp"
    stop_timeout: 600
    pull: true
    volumes:
      - "{{ folder }}/{{ execution_container_name }}:/bor-home"
    command:
      - "server"
      # Default configs and ports
      - "--datadir=/bor-home"
      - "--nat=extip:{{ public_ip.content | trim }}"
      - "--port={{ custom_port_prefix }}03" # 11703
      - "--bor.heimdall=http://{{ consensus_container_name }}rest:1317"
      - "--syncmode=full"
      - "--chain={{ execution_network }}"
      # Database
      - "--db.engine=pebble"
      - "--state.scheme=path"
      # Peering
      - "--bootnodes={{ execution_bootnodes }}"
      - "--maxpeers=200"
      - "--nodiscover=false"
      # RPC & WS
      - "--http"
      - "--http.addr=0.0.0.0"
      - "--http.vhosts=*"
      - "--http.corsdomain=*"
      - "--http.port=8545"
      - "--http.api=eth,net,web3,txpool,bor,admin,debug"
      - "--ws"
      - "--ws.addr=0.0.0.0"
      - "--ws.origins=*"
      - "--ws.port=8546"
      - "--ws.api=eth,net,web3,txpool,bor,admin,debug"
      # RMN
      - "--rpc.batchlimit=0" # set to 0 per RMN Documentation)
      - "--rpc.returndatalimit=70000000" # set to 70MB per RMN Documentation
      - "--rpc.txfeecap=0" # set to 0 per RMN Documentation
