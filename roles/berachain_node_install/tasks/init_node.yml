---
# Install and run Berachain Beacond via Docker with init
# Init standard reth client via Docker as execution client

- name: Clone berachain beacond repo
  ansible.builtin.git:
    repo: "{{ consensus_repo }}"
    dest: "{{ user_dir }}/source/{{ network }}"
    version: "{{ consensus_version }}"
    update: true
    force: true
    recursive: true
  register: git_repo_status

- name: Build berachain beacond docker image
  community.docker.docker_image_build:
    name: "{{ consensus_container_name }}"
    tag: "{{ consensus_version }}"
    path: "{{ user_dir }}/source/{{ network }}"
    platform: linux/amd64
  when: git_repo_status.changed

- name: Build base folder structure
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
  loop:
    - "{{ folder }}"
    - "{{ folder }}/{{ consensus_container_name }}"
    - "{{ folder }}/{{ execution_container_name }}"

- name: Create jwtsecret if it does not exist
  ansible.builtin.shell: "openssl rand -hex 32 | tr -d '\n' | sed -e 's/^/0x/' > jwtsecret"
  args:
    chdir: "{{ folder }}"
    creates: jwtsecret
    executable: /bin/bash

# Begin berachain beacond initialization
- name: Identify if beacond is initialized
  ansible.builtin.stat:
    path: "{{ folder }}/{{ consensus_container_name }}/config/genesis.json"
  register: node_initialized

- name: Initialize berachain beacond node
  when: not node_initialized.stat.exists
  block:
    - name: Initialize berachain beacond node
      community.docker.docker_container:
        name: "{{ consensus_container_name }}-init"
        image: "{{ consensus_container_name }}:{{ consensus_container_version }}"
        state: started
        volumes:
          - "{{ folder }}/{{ consensus_container_name }}:/beacond"
        command:
          - init
          - "{{ network }}"
          - --chain-id={{ consensus_chain_id }}
          - --consensus-key-algo=bls12_381
          - --home=/beacond

    - name: Remove unneeded init container
      community.docker.docker_container:
        name: "{{ consensus_container_name }}-init"
        state: absent

    - name: Retrieve genesis.json file
      become: true
      ansible.builtin.get_url:
        url: "{{ consensus_genesis }}"
        dest: "{{ folder }}/{{ consensus_container_name }}/config/genesis.json"
        mode: "0644"

    - name: Ensure kzg trusted setup file
      become: true
      ansible.builtin.get_url:
        url: "{{ consensus_kzg_trusted }}"
        dest: "{{ folder }}/{{ consensus_container_name }}/kzg-trusted-setup.json"
        mode: "0644"

# Begin berachain execution engine initialization
- name: Identify if execution is initialized
  ansible.builtin.stat:
    path: "{{ folder }}/{{ execution_container_name }}/reth.toml"
  register: execution_initialized

- name: Initialize berachain execution node
  when: not execution_initialized.stat.exists
  block:
    - name: Retrieve eth-genesis.json
      ansible.builtin.get_url:
        url: "{{ execution_genesis }}"
        dest: "{{ folder }}/{{ execution_container_name }}/eth-genesis.json"
        mode: "0644"

    - name: Init berachain execution container
      community.docker.docker_container:
        name: "{{ execution_container_name }}-init"
        image: ghcr.io/paradigmxyz/reth:{{ execution_container_version }}
        state: started
        pull: true
        volumes:
          - "{{ folder }}/{{ execution_container_name }}:/data"
        command: init --datadir=/data --chain=/data/eth-genesis.json

    - name: Remove unneeded init container
      community.docker.docker_container:
        name: "{{ execution_container_name }}-init"
        state: absent
