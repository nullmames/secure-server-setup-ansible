---
- name: Initial init of machines not ready for other playbooks
  hosts: all
  gather_facts: false
  vars_files:
    - "{{ user_file }}"
  vars:
    ara_playbook_name: bare metal init
    ara_playbook_labels: init
  become: true

  vars_prompt:
    name: "initial_user"
    prompt: "Enter the initial user for this machine"
    private: false

  pre_tasks:
    - name: Change ansible_user for initial login
      ansible.builtin.set_fact:
        ansible_user: "{{ initial_user }}"

    # When boxes ship without basic python
    - name: Check for Python
      ansible.builtin.raw: test -e /usr/bin/python
      changed_when: false
      failed_when: false
      register: check_python

    - name: Install Python
      ansible.builtin.raw: apt -y update && apt install -y python3-minimal
      when: check_python.rc != 0

    - name: Install python, sudo
      ansible.builtin.apt:
        name:
          - python3
          - sudo
        state: present
        update_cache: false

    - name: Gather facts as initial user
      ansible.builtin.setup:

  roles:
    - init_bare

  post_tasks:
    - name: Delete initial_user if not root
      when: initial_user != "root"
      block:
        - name: Get list of PIDs for user
          ansible.builtin.shell: "ps -u {{ initial_user }} -o pid --no-header | awk '{print $1}'"
          register: pids_result

        - name: Wait for all user processes to exit
          ansible.builtin.wait_for:
            path: "/proc/{{ item }}/status"
            state: absent
          with_items: "{{ pids_result.stdout_lines }}"
          when: pids_result

        - name: Delete initial_user
          ansible.builtin.user:
            name: "{{ initial_user }}"
            state: absent
            remove: true

- name: Reboot host if necessary
  ansible.builtin.import_playbook: util_system_reboot.yml
